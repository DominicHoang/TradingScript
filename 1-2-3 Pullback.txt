// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© DominicHoang

//@version=4
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© DominicHoang

//@version=4

strategy("1-2-3 Pullback", overlay=true)

start = timestamp(1975,1,1,0,0)
end = timestamp(2022,1,1,0,0)

rsi2 = rsi(close,2)
[macdLine, signalLine, histLine] = macd(close, 12, 26, 9)
ma50 = sma(close,50)
ma200 = sma(close,200)
//ADX 
len = input(14)
th = input(20)

TrueRange = max(max(high-low, abs(high-nz(close[1]))), abs(low-nz(close[1])))
DirectionalMovementPlus = high-nz(high[1]) > nz(low[1])-low ? max(high-nz(high[1]), 0): 0
DirectionalMovementMinus = nz(low[1])-low > high-nz(high[1]) ? max(nz(low[1])-low, 0): 0

SmoothedTrueRange = 0.0
SmoothedTrueRange := nz(SmoothedTrueRange[1]) - (nz(SmoothedTrueRange[1])/len) + TrueRange

SmoothedDirectionalMovementPlus = 0.0
SmoothedDirectionalMovementPlus := nz(SmoothedDirectionalMovementPlus[1]) - (nz(SmoothedDirectionalMovementPlus[1])/len) + DirectionalMovementPlus

SmoothedDirectionalMovementMinus = 0.0
SmoothedDirectionalMovementMinus := nz(SmoothedDirectionalMovementMinus[1]) - (nz(SmoothedDirectionalMovementMinus[1])/len) + DirectionalMovementMinus

DIPlus = SmoothedDirectionalMovementPlus / SmoothedTrueRange * 100
DIMinus = SmoothedDirectionalMovementMinus / SmoothedTrueRange * 100
DX = abs(DIPlus-DIMinus) / (DIPlus+DIMinus)*100
ADX = sma(DX, len)


//Entry rule
pattern = low[2] > low[1] and low[1] > low

enterLong = ADX > 30 and DIPlus > DIMinus and pattern and ma50 > ma200 
exitLong = rsi2 > 90 and histLine < 0
if time > start and time < end 
    strategy.entry("Long", strategy.long, when = enterLong)
    strategy.close("Long", when = exitLong)
